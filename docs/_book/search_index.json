[["_main.html", "時系列データ 0.1 plot 0.2 年を指定 0.3 期間を指定 0.4 ggplot2.zoo 0.5 Plotly 0.6 dygraphs", " 時系列データ 2023-04-02 時系列データではPOSIXct，POSIXtというクラスを使う。 必須のパッケージはxts: eXtensible Time Seriesとzoo: S3 Infrastructure for Regular and Irregular Time Series (Z’s Ordered Observations)である。 ここでは，時系列データとしてSwitchBot温湿度計からエクスポートしたデータを用いる （参考：SwitchBot温湿度計 | 履歴データをエクスポートする方法 – SwitchBotサポート）。 library(zoo) ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric library(xts) ## ## ################################### WARNING ################################### ## # We noticed you have dplyr installed. The dplyr lag() function breaks how # ## # base R&#39;s lag() function is supposed to work, which breaks lag(my_xts). # ## # # ## # If you call library(dplyr) later in this session, then calls to lag(my_xts) # ## # that you enter or source() into this session won&#39;t work correctly. # ## # # ## # All package code is unaffected because it is protected by the R namespace # ## # mechanism. # ## # # ## # Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning. # ## # # ## # You can use stats::lag() to make sure you&#39;re not using dplyr::lag(), or you # ## # can add conflictRules(&#39;dplyr&#39;, exclude = &#39;lag&#39;) to your .Rprofile to stop # ## # dplyr from breaking base R&#39;s lag() function. # ## ################################### WARNING ################################### d &lt;- read.csv(&quot;../data/Meter_data.csv&quot;) dts &lt;- xts::as.xts(zoo::read.zoo(d)) head(dts) ## Temperature_Celsius Relative_Humidity ## 2021-03-28 13:39:45 22.4 49 ## 2021-03-28 13:52:56 24.1 50 ## 2021-03-28 13:54:04 24.3 48 ## 2021-03-28 13:57:13 24.4 46 ## 2021-03-28 14:01:15 23.8 47 ## 2021-03-28 14:05:23 23.3 48 dim(dts) ## [1] 696058 2 0.1 plot 温度と湿度を別々にプロットすると @fig-plot のようになる。 年や月，日などで期間を指定できる。 @fig-plot-year は2022年だけの図， @fig-plot-month は月単位で期間を指定した場合の図である。 また，@fig-plot-monthlymean のように月ごとに最大値，最小値，平均値を描画することも簡単にできる。 layout(matrix(1:2, ncol = 1)) plot(dts[, &quot;Temperature_Celsius&quot;], main = &quot;Temperature Celsius&quot;) plot(dts[, &quot;Relative_Humidity&quot;], main = &quot;Relative Humidity&quot;) 0.2 年を指定 plot(dts[&quot;2022&quot;, &quot;Temperature_Celsius&quot;], main = &quot;Temperature Celsius&quot;) 0.3 期間を指定 plot(dts[&quot;2022-12/2023-01&quot;, &quot;Temperature_Celsius&quot;], main = &quot;Temperature Celsius&quot;) layout(matrix(1:2, ncol=1)) plot(cbind(apply.monthly(dts[, &quot;Temperature_Celsius&quot;], min), apply.monthly(dts[, &quot;Temperature_Celsius&quot;], max)), main = &quot;Temperature Celsius&quot;) plot(apply.monthly(dts[, &quot;Temperature_Celsius&quot;], mean), main = &quot;Temperature Celsius&quot;) 0.4 ggplot2.zoo ggplot2で描画する場合，データフレームをそのまま引数に入れてよい。 ggplot2を用いると，温度と湿度の折れ線グラフは @fig-plot-ggplot2 のようになる。 ggplot2::autoplot(dts, geom = &quot;line&quot;) 0.5 Plotly Plotlyは時系列データを扱うこともできるが，描画前にデータをデータフレームに変換しなければならない。 Plotlyを用いると，温度の折れ線グラフは @fig-plot-plotly のようになる。 library(plotly) ## Loading required package: ggplot2 ## ## Attaching package: &#39;plotly&#39; ## The following object is masked from &#39;package:ggplot2&#39;: ## ## last_plot ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## The following object is masked from &#39;package:graphics&#39;: ## ## layout dts2 &lt;- as.data.frame(dts) dts2$index &lt;- zoo::index(dts) fig &lt;- plotly::plot_ly(dts2, x = ~index, y = ~Temperature_Celsius, type = &#39;scatter&#39;, mode = &#39;lines&#39;) fig 0.6 dygraphs dygraphsは時系列データをそのまま描画できる。 dygraphsを用いると，温度と湿度の折れ線グラフは @fig-plot-dygraphs のようになる。 温度と湿度の軸が同じなのは奇妙である。 別々のグラフにしたければ，@fig-plot-dygraphs2-1 のようにすればよい。 library(dygraphs) dygraphs::dygraph(dts) %&gt;% dyEvent(&quot;2022-01-01&quot;, &quot;2022&quot;, labelLoc = &quot;bottom&quot;) %&gt;% dyEvent(&quot;2023-01-01&quot;, &quot;2023&quot;, labelLoc = &quot;bottom&quot;) %&gt;% dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = TRUE) %&gt;% dyRangeSelector() dateWindow &lt;- c(&quot;2022-01-01&quot;, &quot;2022-12-31&quot;) dg1 &lt;- dygraphs::dygraph(dts[, 1], group = &quot;homedata&quot;) %&gt;% dyRangeSelector(dateWindow = dateWindow) dg2 &lt;- dygraphs::dygraph(dts[, 2], group = &quot;homedata&quot;) %&gt;% dyRangeSelector(dateWindow = dateWindow) dg1; dg2 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
